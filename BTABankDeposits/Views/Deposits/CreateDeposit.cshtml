@model BTABankDeposits.Models.Deposit

@{
    ViewBag.Title = "CreateDeposit";
}

<h2>CreateDeposit</h2>
<div class="col-lg">
    <h2 class="lead">@ViewBag.Client.Name</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input type="hidden" value="@ViewBag.Client.Id" />

    <div class="form-horizontal">
        <h4>Deposit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container ">
            <p>Идентификационный номер клиента:</p>
            <p class="form-control col-1"> @ViewBag.Client.ClientId</p>
        </div>
        <hr />

        <div class="form-group row container">
            <div class="col-lg-4">
                <p class="col-form-label">Тип депозита</p>
                <select name="DepositType" id="depositTypeName" class="form-control">
                    @foreach (var item in ViewBag.DepositTypes)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.DepositTypeId, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                <p class="col-form-label">Процентная ставка</p>
                <p id="depositTypePercent" class="form-control"></p>
            </div>
        </div>

        <div class="form-group col-md-10">
            <p>Валюта депозита</p>
           <select class="form-control" name="CurrencyId">
               @foreach (var item in ViewBag.Currencies)
               {
                   <option value="@item.Id">@item.Name</option>
               }
           </select>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractNumber, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group row">
            @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ContractDuration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractDuration, new { htmlAttributes = new { @class = "form-control", @min=31} })
                @Html.ValidationMessageFor(model => model.ContractDuration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepositSum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepositSum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepositSum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(
            function () {

                function UpdatePercentValue() {
                    let id = $('#depositTypeName').val();

                    let types =  @Html.Raw(Json.Encode(ViewBag.DepositTypes));

                    let type = types.find(function (e) {
                        return e.Id == id;
                    });

                    $('#depositTypePercent').text(type.Percent);
                }

                $('#depositTypeName').change(function () {
                    UpdatePercentValue();
                });

                UpdatePercentValue();
            }
        );
    </script>
}
